<?php
/**
 * PlexDeviceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Overseerr API
 *
 * This is the documentation for the Overseerr API backend.  Two primary authentication methods are supported:  - **Cookie Authentication**: A valid sign-in to the `/auth/plex` or `/auth/local` will generate a valid authentication cookie. - **API Key Authentication**: Sign-in is also possible by passing an `X-Api-Key` header along with a valid API Key generated by Overseerr.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.35
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * PlexDeviceTest Class Doc Comment
 *
 * @category    Class
 * @description PlexDevice
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PlexDeviceTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "PlexDevice"
     */
    public function testPlexDevice()
    {
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "product"
     */
    public function testPropertyProduct()
    {
    }

    /**
     * Test attribute "product_version"
     */
    public function testPropertyProductVersion()
    {
    }

    /**
     * Test attribute "platform"
     */
    public function testPropertyPlatform()
    {
    }

    /**
     * Test attribute "platform_version"
     */
    public function testPropertyPlatformVersion()
    {
    }

    /**
     * Test attribute "device"
     */
    public function testPropertyDevice()
    {
    }

    /**
     * Test attribute "client_identifier"
     */
    public function testPropertyClientIdentifier()
    {
    }

    /**
     * Test attribute "created_at"
     */
    public function testPropertyCreatedAt()
    {
    }

    /**
     * Test attribute "last_seen_at"
     */
    public function testPropertyLastSeenAt()
    {
    }

    /**
     * Test attribute "provides"
     */
    public function testPropertyProvides()
    {
    }

    /**
     * Test attribute "owned"
     */
    public function testPropertyOwned()
    {
    }

    /**
     * Test attribute "owner_id"
     */
    public function testPropertyOwnerId()
    {
    }

    /**
     * Test attribute "home"
     */
    public function testPropertyHome()
    {
    }

    /**
     * Test attribute "source_title"
     */
    public function testPropertySourceTitle()
    {
    }

    /**
     * Test attribute "access_token"
     */
    public function testPropertyAccessToken()
    {
    }

    /**
     * Test attribute "public_address"
     */
    public function testPropertyPublicAddress()
    {
    }

    /**
     * Test attribute "https_required"
     */
    public function testPropertyHttpsRequired()
    {
    }

    /**
     * Test attribute "synced"
     */
    public function testPropertySynced()
    {
    }

    /**
     * Test attribute "relay"
     */
    public function testPropertyRelay()
    {
    }

    /**
     * Test attribute "dns_rebinding_protection"
     */
    public function testPropertyDnsRebindingProtection()
    {
    }

    /**
     * Test attribute "nat_loopback_supported"
     */
    public function testPropertyNatLoopbackSupported()
    {
    }

    /**
     * Test attribute "public_address_matches"
     */
    public function testPropertyPublicAddressMatches()
    {
    }

    /**
     * Test attribute "presence"
     */
    public function testPropertyPresence()
    {
    }

    /**
     * Test attribute "connection"
     */
    public function testPropertyConnection()
    {
    }
}
